#!/usr/bin/env python
PACKAGE = "libviso2_matcher"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("nms_n",					int_t, 0, "non-max-suppression: min. distance between maxima (in pixels)", 10,  0, 25)
gen.add("nms_tau",					int_t, 0, "non-max-suppression: interest point peakiness threshold", 75, 0, 100)
gen.add("match_binsize",			int_t, 0, "matching bin width/height (affects efficiency only)", 50, 10, 100)
gen.add("match_radius",				int_t, 0, "matching radius (du/dv in pixels)", 200, 1, 1000)
gen.add("match_disp_tolerance",		int_t, 0, "dv tolerance for stereo matches (in pixels)", 10, 1, 25)
gen.add("outlier_disp_tolerance",	int_t, 0, "outlier removal: disparity tolerance (in pixels)", 10, 1, 25)
gen.add("outlier_flow_tolerance",	int_t, 0, "outlier removal: flow tolerance (in pixels)", 10, 1, 25)

multi_enum = gen.enum([ gen.const("multi_disabled",   int_t, 0, "0=disabled"),
                       gen.const("multi_multistage", int_t, 1, "1=multistage (denser and faster)")],
                     "multi_stage enum")

gen.add("multi_stage", int_t, 0, "multistage matching", 1, 0, 1, edit_method=multi_enum)

half_enum = gen.enum([ gen.const("half_disabled",   int_t, 0, "0=disabled"),
                       gen.const("half_half", 	   int_t, 1, "1=match at half resolution, refine at full resolution")],
                     "half_resolution enum")

gen.add("half_resolution", int_t, 0, "multistage matching", 1, 0, 1, edit_method=half_enum)

sub_enum = gen.enum([ gen.const("sub_none",  	   int_t, 0, "0=none"),
                      gen.const("sub_pixel", 	   int_t, 1, "1=pixel"),
                      gen.const("sub_subpixel", int_t, 2, "2=subpixel") ],
                     "refine_resolution enum")

gen.add("refinement", int_t, 0, "refinement", 1, 0, 2, edit_method=sub_enum)



exit(gen.generate(PACKAGE, "libviso2_matcher", "matcher_parameters"))